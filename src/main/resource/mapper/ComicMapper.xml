<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.larimar.mapper.ComicMapper">
    <resultMap id="BaseResultMap" type="comic">
        <id column="comic_id" property="comicId"/>
        <result column="path" property="path"/>
        <result column="comicname" property="comicName"/>
        <result column="author" property="author"/>
        <result column="status" property="status"/>
        <result column="type" property="type"/>
        <result column="location" property="location"/>
        <result column="newupdate" property="newUpdate"/>
        <result column="newchaptername" property="newChapterName"/>
        <result column="introduction" property="introduction"/>
        <result column="mark" property="mark"/>
    </resultMap>

    <insert id="addComic" parameterType="comic">
        insert into comic
        (comic_id, path, comicname, author, status, type, location,
        newchaptername, introduction, mark ,newUpdate )
        VALUES (#{comicId}, #{path}, #{comicName}, #{author},#{status}, #{type},
                #{location},#{newChapterName}, #{introduction}, #{mark}
                    <if test="newUpdate!=null">
                        ,#{newUpdate}
                    </if>
                    <if test="newUpdate=null">
                        ,null
                    </if>
                )
    </insert>

    <delete id="delComic" parameterType="Integer">
        delete
        from comic
        where comic_id = #{id}
    </delete>

    <update id="updateComic" parameterType="comic">
        update comic
        <set>
            <if test="path!=null">
                path=#{path},
            </if>
            <if test="comicName!=null">
                comicname=#{comicName},
            </if>
            <if test="status!=null">
                status=#{status},
            </if>
            <if test="author!=null">
                author=#{author},
            </if>
            <if test="type!=null">
                type=#{type},
            </if>
            <if test="location!=null">
                location=#{location},
            </if>
            <if test="newUpdate!=null">
                newupdate=#{newUpdate},
            </if>
            <if test="newUpdate=null">
                newupdate=null,
            </if>
            <if test="newChapterName!=null">
                newchaptername=#{newChapterName},
            </if>
            <if test="introduction!=null">
                introduction=#{introduction},
            </if>
            <if test="mark!=null">
                mark=#{mark}
            </if>
        </set>
        <where>
            <if test="comicId!=null">
                comic_id = #{comicId}
            </if>
        </where>
    </update>

    <update id="updateComicStatus">
        update comic
        <set>
            <if test="status!=null">
                status=#{status},
            </if>
        </set>
        <where>
            <if test="comicId!=null">
                comic_id = #{comicId}
            </if>
        </where>
    </update>
    <update id="updateComicNewsUpdateTime">
        update comic
        <set>
            <if test="newUpdateTime!=null">
                newupdate=#{newUpdateTime},
            </if>
            <if test="newChapter!=null">
                newchaptername=#{newChapter},
            </if>
        </set>
        <where>
            <if test="comicId!=null">
                comic_id = #{comicId}
            </if>
        </where>
    </update>

  <select id="selectAllComics" resultMap="BaseResultMap">
    select * from comic order by comic_id desc
  </select>

  <select id="selectComicByAuthor" resultMap="BaseResultMap">
    <bind name="likeAuthor" value="'%' +author+ '%'"/>
    select * from comic where author like #{likeAuthor}
  </select>

  <select id="selectComicById" resultMap="BaseResultMap">
    select * from comic where comic_id = #{comicId}
  </select>

  <select id="selectComicByLocation" resultMap="BaseResultMap">
    select * from comic where location = #{location}
  </select>

  <select id="selectComicLikeName" resultMap="BaseResultMap">
    <bind name="likeName" value="'%' +name+ '%'"/>
    select * from comic where comicname like #{likename}
  </select>
    <select id="selectComicByName" resultMap="BaseResultMap">
    select * from comic where comicname=#{comicName}
  </select>

  <select id="selectComicByTypeName" resultMap="BaseResultMap">
      <bind name="likeType" value="'%' +typeName+ '%'"/>
    select * from comic where type like #{likeType}
  </select>

  <select id="selectComicByOrder" resultMap="BaseResultMap">
    select * from comic as c,(select comic_id, COUNT(comic_id) as orderNum from orders group by comic_id  limit 10) as a
    where c.comic_id = a.comic_id
    ORDER BY orderNum DESC
  </select>

  <select id="selectComicByStatus" resultMap="BaseResultMap">
    select * from comic where status = #{status}
  </select>

  <select id="selectNewComics" resultMap="BaseResultMap">
    select * from comic order by comic_id desc limit 10
  </select>

  <select id="selectOrderComic" resultMap="BaseResultMap">
    select * from comic
    where comic_id in
          (select comic_id from orders where user_id = #{userId})
  </select>

  <select id="selectComicsByLikes" resultMap="BaseResultMap">
    select * from
        comic as c,
        (SELECT comic_id ,number as likesNum from likes
        where likes.comic_id is not null LIMIT 10)
        as a
    where c.comic_id = a.comic_id
    ORDER BY likesNum DESC
    </select>

</mapper>